[
    {
        "question_number": 1,
        "correct_answer": "u + 10 = x and v = y"
    },
    {
        "question_number": 2,
        "correct_answer": "The implementation may not work if context switching is disabled in P."
    },
    {
        "question_number": 3,
        "correct_answer": "2"
    },
    {
        "question_number": 4,
        "correct_answer": "2"
    },
    {
        "question_number": 5,
        "correct_answer": "C"
    },
    {
        "question_number": 6,
        "correct_answer": "X: P(b)P(a)P(c) Y: P(b)P(c)P(d) Z: P(a)P(c)P(d)"
    },
    {
        "question_number": 7,
        "correct_answer": "2"
    },
    {
        "question_number": 8,
        "correct_answer": "C"
    },
    {
        "question_number": 9,
        "correct_answer": "7"
    },
    {
        "question_number": 10,
        "correct_answer": "fails as L can take on a non-zero value when the lock is actually available"
    },
    {
        "question_number": 11,
        "correct_answer": "t1 < t2"
    },
    {
        "question_number": 12,
        "correct_answer": "On per-thread basis, the OS does not maintain virtual memory state"
    },
    {
        "question_number": 13,
        "correct_answer": "Mutual exclusion but not progress"
    },
    {
        "question_number": 14,
        "correct_answer": "At least twice"
    },
    {
        "question_number": 15,
        "correct_answer": "I only"
    },
    {
        "question_number": 16,
        "correct_answer": "1 and 0"
    },
    {
        "question_number": 17,
        "correct_answer": "2n - 1"
    },
    {
        "question_number": 18,
        "correct_answer": "Blocking one kernel level thread blocks all related threads."
    },
    {
        "question_number": 19,
        "correct_answer": "It does not prevent deadlocks, but ensures mutual exclusion."
    },
    {
        "question_number": 20,
        "correct_answer": "Kernel level threads cannot share the code segment"
    },
    {
        "question_number": 21,
        "correct_answer": "1.6"
    },
    {
        "question_number": 22,
        "correct_answer": "Deadlock occurs if the consumer succeeds in acquiring semaphore s when the buffer is empty."
    },
    {
        "question_number": 23,
        "correct_answer": "The implementation may not work if context switching is disabled in P"
    },
    {
        "question_number": 24,
        "correct_answer": "The barrier implementation may lead to a deadlock if two barrier in invocations are used in immediate succession."
    },
    {
        "question_number": 25,
        "correct_answer": "At the beginning of the barrier the first process to enter the barrier waits until process_arrived becomes zero before proceeding to execute P(S)."
    },
    {
        "question_number": 26,
        "correct_answer": "P(SX), P(SY); P(SX), P(SY)"
    },
    {
        "question_number": 27,
        "correct_answer": "P(S) at W, V(T) at X, P(T) at Y, V(S) at Z, S initially 1, and T initially 0"
    },
    {
        "question_number": 28,
        "correct_answer": "P(S) at W, V(S) at X, P(S) at Y, V(S) at Z, S initially 1"
    },
    {
        "question_number": 29,
        "correct_answer": "Scheduler process"
    },
    {
        "question_number": 30,
        "correct_answer": "Translation look aside buffer"
    },
    {
        "question_number": 31,
        "correct_answer": "3"
    },
    {
        "question_number": 32,
        "correct_answer": "The proposed solution prevents deadlock but fails to guarantee mutual exclusion"
    },
    {
        "question_number": 33,
        "correct_answer": "The scheme is deadlock-free, but not starvation-free"
    },
    {
        "question_number": 34,
        "correct_answer": "2n - 1"
    },
    {
        "question_number": 35,
        "correct_answer": "P(empty), V(full), P(full), V(empty)"
    },
    {
        "question_number": 36,
        "correct_answer": "This solution violates progress requirement."
    },
    {
        "question_number": 37,
        "correct_answer": "7"
    },
    {
        "question_number": 38,
        "correct_answer": "null"
    },
    {
        "question_number": 39,
        "correct_answer": "Values generated and stored in 'x' by the producer will always be consumed before the producer can generate a new value"
    },
    {
        "question_number": 40,
        "correct_answer": "Starvation can occur but deadlock cannot occur"
    },
    {
        "question_number": 41,
        "correct_answer": "degenerate to first come first serve"
    },
    {
        "question_number": 42,
        "correct_answer": "10"
    },
    {
        "question_number": 43,
        "correct_answer": "Swapping out the memory image of process A to the disk."
    },
    {
        "question_number": 44,
        "correct_answer": "None of these"
    },
    {
        "question_number": 45,
        "correct_answer": "null"
    },
    {
        "question_number": 46,
        "correct_answer": "an operating system with a preemptive schedular"
    },
    {
        "question_number": 47,
        "correct_answer": "Threads have considerable overhead while processes have almost no overhead."
    },
    {
        "question_number": 48,
        "correct_answer": "I, II and III only"
    },
    {
        "question_number": 49,
        "correct_answer": "38"
    },
    {
        "question_number": 50,
        "correct_answer": "QPTRS"
    },
    {
        "question_number": 51,
        "correct_answer": "wait, signal"
    },
    {
        "question_number": 52,
        "correct_answer": "3"
    },
    {
        "question_number": 53,
        "correct_answer": "2n -1"
    },
    {
        "question_number": 54,
        "correct_answer": "Kernel level threads cannot utilize multiprocessor systems by splitting threads on different processors or cores"
    },
    {
        "question_number": 55,
        "correct_answer": "(a) is true; (b) is false"
    },
    {
        "question_number": 56,
        "correct_answer": "Producer - consumer problem"
    },
    {
        "question_number": 57,
        "correct_answer": "10 and 11"
    },
    {
        "question_number": 58,
        "correct_answer": "Among processes that share resources"
    },
    {
        "question_number": 59,
        "correct_answer": "is a piece of code which only one process executes at a time"
    },
    {
        "question_number": 60,
        "correct_answer": "Both (b) and (d)"
    },
    {
        "question_number": 61,
        "correct_answer": "0"
    },
    {
        "question_number": 62,
        "correct_answer": "18"
    },
    {
        "question_number": 63,
        "correct_answer": "If a user-level thread of a process executes a system call, all threads in that process are blocked."
    },
    {
        "question_number": 64,
        "correct_answer": "(a), (b) and (c)"
    },
    {
        "question_number": 65,
        "correct_answer": "c"
    },
    {
        "question_number": 66,
        "correct_answer": "circular queue"
    },
    {
        "question_number": 67,
        "correct_answer": "Yes, D, E, G"
    },
    {
        "question_number": 68,
        "correct_answer": "14"
    },
    {
        "question_number": 69,
        "correct_answer": "99.97%"
    },
    {
        "question_number": 70,
        "correct_answer": "Yes, P4P3P1P2"
    },
    {
        "question_number": 71,
        "correct_answer": "P2, P1, P3"
    },
    {
        "question_number": 72,
        "correct_answer": "n!"
    },
    {
        "question_number": 73,
        "correct_answer": "Round robin"
    },
    {
        "question_number": 74,
        "correct_answer": "blocked"
    },
    {
        "question_number": 75,
        "correct_answer": "Temporarily raise the priority of lower priority level process"
    },
    {
        "question_number": 76,
        "correct_answer": "A software interrupt"
    },
    {
        "question_number": 77,
        "correct_answer": "0.42 sec"
    },
    {
        "question_number": 78,
        "correct_answer": "26.2 ms"
    },
    {
        "question_number": 79,
        "correct_answer": "unsafe state"
    },
    {
        "question_number": 80,
        "correct_answer": "Processor can not be pre-empted"
    },
    {
        "question_number": 81,
        "correct_answer": "1"
    },
    {
        "question_number": 82,
        "correct_answer": "Dispatch: ready \u2192 running"
    },
    {
        "question_number": 83,
        "correct_answer": "A B C D\n2 4 1 3"
    },
    {
        "question_number": 84,
        "correct_answer": "2"
    },
    {
        "question_number": 85,
        "correct_answer": "the size of the time quantum"
    },
    {
        "question_number": 86,
        "correct_answer": "10.8 ms"
    },
    {
        "question_number": 87,
        "correct_answer": "A program in execution"
    },
    {
        "question_number": 88,
        "correct_answer": "9"
    },
    {
        "question_number": 89,
        "correct_answer": "Translation look-aside buffer"
    },
    {
        "question_number": 90,
        "correct_answer": "using very large time slices (quantas) degenerates into FirstCome First served (FCFS) algorithm."
    },
    {
        "question_number": 91,
        "correct_answer": "real time system"
    },
    {
        "question_number": 92,
        "correct_answer": "the creation of a new process"
    },
    {
        "question_number": 93,
        "correct_answer": "Translation look-aside buffer"
    },
    {
        "question_number": 94,
        "correct_answer": "the size of the time quantum"
    },
    {
        "question_number": 95,
        "correct_answer": "(2)"
    },
    {
        "question_number": 96,
        "correct_answer": "Classical IPC problem"
    },
    {
        "question_number": 97,
        "correct_answer": "Shortest job first"
    },
    {
        "question_number": 98,
        "correct_answer": "FIFO"
    },
    {
        "question_number": 99,
        "correct_answer": "Multi-tasking"
    },
    {
        "question_number": 100,
        "correct_answer": "is waiting for some temporarily unavailable resources"
    },
    {
        "question_number": 101,
        "correct_answer": "5, 9, 12, 18"
    },
    {
        "question_number": 102,
        "correct_answer": "dispatch tasks according to execution characteristics"
    },
    {
        "question_number": 103,
        "correct_answer": "Processes running outside its critical section may block other processes."
    },
    {
        "question_number": 104,
        "correct_answer": "Software interrupts"
    },
    {
        "question_number": 105,
        "correct_answer": "125 chars/second and 1.6 seconds"
    },
    {
        "question_number": 106,
        "correct_answer": "It is higher level synchronization primitive and is a collection of procedures, variables, and data structures grouped together in a special package."
    },
    {
        "question_number": 107,
        "correct_answer": "4 times"
    },
    {
        "question_number": 108,
        "correct_answer": "A = P(N), B = V(M), C = P(M), D = V(N); M = 0, N = 1;"
    },
    {
        "question_number": 109,
        "correct_answer": "9"
    },
    {
        "question_number": 110,
        "correct_answer": "null"
    }
]